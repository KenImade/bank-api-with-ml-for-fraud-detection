"""add_ml_models

Revision ID: 97eeaa80a645
Revises: 5adc1a14c390
Create Date: 2025-07-26 10:23:29.902959

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '97eeaa80a645'
down_revision: Union[str, None] = '5adc1a14c390'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('mlmodel',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('version', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sa.Enum('TRAINING', 'READY', 'DEPLOYED', 'FAILED', 'ARCHIVED', name='modelstatusenum'), nullable=False),
    sa.Column('auc_score', sa.Float(), nullable=False),
    sa.Column('precision', sa.Float(), nullable=False),
    sa.Column('recall', sa.Float(), nullable=False),
    sa.Column('f1_score', sa.Float(), nullable=False),
    sa.Column('features', postgresql.ARRAY(sa.VARCHAR()), nullable=True),
    sa.Column('hyperparameters', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('training_dataset_size', sa.Integer(), nullable=False),
    sa.Column('mlflow_run_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('mlflow_experiment_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('mlflow_model_uri', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('trained_at', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('deployed_at', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mlmodel_name'), 'mlmodel', ['name'], unique=False)
    op.create_index(op.f('ix_mlmodel_version'), 'mlmodel', ['version'], unique=False)
    op.create_table('trainingdataset',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('version', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('total_samples', sa.Integer(), nullable=False),
    sa.Column('fraud_samples', sa.Integer(), nullable=False),
    sa.Column('legitimate_samples', sa.Integer(), nullable=False),
    sa.Column('start_date', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('end_date', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('dataset_path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('mlflow_artifact_uri', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('feature_info', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('modelprediction',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('transaction_id', sa.Uuid(), nullable=False),
    sa.Column('model_id', sa.Uuid(), nullable=False),
    sa.Column('prediction_score', sa.Float(), nullable=False),
    sa.Column('prediction_timestamp', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('input_features', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('true_label', sa.Boolean(), nullable=True),
    sa.Column('mlflow_run_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['model_id'], ['mlmodel.id'], ),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_modelprediction_model_id'), 'modelprediction', ['model_id'], unique=False)
    op.create_index(op.f('ix_modelprediction_transaction_id'), 'modelprediction', ['transaction_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_modelprediction_transaction_id'), table_name='modelprediction')
    op.drop_index(op.f('ix_modelprediction_model_id'), table_name='modelprediction')
    op.drop_table('modelprediction')
    op.drop_table('trainingdataset')
    op.drop_index(op.f('ix_mlmodel_version'), table_name='mlmodel')
    op.drop_index(op.f('ix_mlmodel_name'), table_name='mlmodel')
    op.drop_table('mlmodel')
    # ### end Alembic commands ###
